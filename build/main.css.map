{"version":3,"sources":["bower_components/o-fonts/src/scss/_mixins.scss","main.scss","bower_components/o-fonts/src/scss/_variables.scss","bower_components/o-colors/src/scss/_palette.scss","bower_components/o-fonts/src/scss/_functions.scss"],"names":[],"mappings":"AAyDG;EAhDF,+GAA2D;EAkDxD,uBCrD4B;EDsD5B,iBEmBc;EFlBd,mBA5C0D,EAAA;;ACT9D;EACE,0BEyB+B;EFxB/B,UAAU;EACV,WAAW,EACZ;;AAED;EACE,aAAa;EACb,4BAA4B;EAC5B,6BAA6B,EAC9B;;AAED;EACE,0BEgG+B;EF/F/B,mCGkCe;EHjCf,eEa+B;EFZ/B,gBAAgB;EAChB,kBAAkB;EAClB,mBAAmB,EACpB;;AAGD;EACE,aAAa;EACb,cAAc;EACd,eAAe;EACf,yBAAwB;EAExB,+CAAoE;EAIpE,uCAA4D,EAC7D;;AAED;EACE;IAAO,yBAA4B,EAAA;EACnC;IAAK,4BAA4B,EAAA,EAAA;;AAkBnC;EACE;IAAO,yBAA4B,EAAA;EACnC;IAAK,4BAA4B,EAAA,EAAA;;AAInC;EACE,iBAAgB;EAChB,cAAc;EACd,iCAAiC,EAClC;;AACD;EACE,mBAAmB;EACnB,qBAAqB;EACrB,gBAAgB;EAChB,oBAAoB;EACpB,mBAAmB;EACnB,WAAW;EACX,kBAAkB;EAClB,iBAAiB,EAClB;;AAED;EACE,uBAAuB,EAIxB;EALD;IAGI,+BAA+B,EAChC;;AAGH;EACE,0BE5C+B,EFgDhC;EALD;IAGI,kCE9C6B,EF+C9B;;AAGH;EACE,YAAY;EACZ,mBAAmB;EACnB,oBAAoB;EACpB,6BAA6B;EAC7B,eAAe;EACf,SAAS;EACT,WAAW;EACX,YAAY;EACZ,SAAS;EACT,YAAY,EACb;;AAED;EACE,sBAAsB;EACtB,aAAa,EACd;;AAED;EACE,aAAa;EACb,YAAY;EACZ,eAAe;EACf,mBAAmB;EACnB,eAAe;EACf,UAAU,EACX;;AAED;EACE,iBAAiB,EAClB;;AAED;EACE,iBAAiB,EAIlB;EALD;IAGI,UAAU,EACX;;AAGH;EACE,iBAAiB,EAIlB;EALD;IAGI,sBEvB6B,EFwB9B;;AAGH;EACE,0BE5B+B;EF6B/B,eE9G+B,EF+GhC;;AAED;EACE,0BEpH+B;EFqH/B,eElC+B,EFmChC","file":"main.css","sourcesContent":["////\n/// @group o-fonts\n/// @link http://registry.origami.ft.com/components/o-fonts\n////\n\n/// Font-face declaration sources\n///\n/// @param {String} fontName - path to the file, without the file extension\n@mixin oFontsSource($fontName) {\n\tsrc: url(oFontsUseAsset($fontName + '.woff?#iefix')) format('woff');\n}\n\n/// Font-face declaration for a given font family\n///\n/// @param {String} $family - one of $o-fonts-families\n/// @param {String} $weight [regular] - one of $_o-fonts-weights\n/// @param {String} $style [normal]\n@mixin oFontsInclude($family, $weight: regular, $style: normal) {\n\t@if $family == 'Clarion' {\n\t\t@warn \"Clarion has been removed, no font will be included. Use Georgia instead\";\n\t}\n\t@if $weight == normal {\n\t\t$weight: regular;\n\t}\n\t$font-exists: false;\n\t// Check if the font has already been included\n\t// If so, no need to output another @font-face declaration\n\t$font-is-already-included: map-has-key($_o-fonts-families-included, #{$family}-#{$weight}-#{$style});\n\n\t@if $font-is-already-included == false {\n\t\t@if map-has-key($o-fonts-families, $family) == false {\n\t\t\t@warn 'Font #{$family} not found. Must be one of $o-fonts-families.';\n\t\t} @else {\n\t\t\t@if (_oFontsVariantExists($family, $weight, $style)) {\n\t\t\t\t$font-exists: true;\n\t\t\t} @else {\n\t\t\t\t@warn 'Variant \"weight: #{$weight}, style: #{$style}\" not found for \"#{$family}\". @font-face rule will not be output.';\n\t\t\t}\n\t\t}\n\n\t\t@if ($font-exists) {\n\t\t\t// Files are named as follows\n\t\t\t// Name-WeightType\n\t\t\t// MetricWeb-Regular              (regular normal)\n\t\t\t// MetricWeb-RegularItalic        (regular italic)\n\t\t\t// MetricWeb-Bold                 (bold normal)\n\t\t\t// MetricWeb-BoldItalic           (bold italic)\n\n\t\t\t// By default, suffix is the weight\n\t\t\t$font-suffix: _oFontsStringCapitalise($weight);\n\n\t\t\t@if ($style != 'normal') {\n\t\t\t\t$capitalised-weight: _oFontsStringCapitalise($weight);\n\t\t\t\t$capitalised-style: _oFontsStringCapitalise($style);\n\t\t\t\t$font-suffix: #{$capitalised-weight}#{$capitalised-style};\n\t\t\t}\n\n\t\t\t@font-face {\n\t\t\t\t@include oFontsSource(#{$family}-#{$font-suffix});\n\t\t\t\tfont-family: $family;\n\t\t\t\tfont-weight: oFontsWeight($weight);\n\t\t\t\tfont-style: $style;\n\t\t\t}\n\n\t\t\t// Add to the list of already included families / variants\n\t\t\t$_o-fonts-families-included: map-merge($_o-fonts-families-included, (#{$family}-#{$weight}-#{$style}: true)) !global;\n\t\t}\n\t}\n}\n\n/// Output @font-face declarations for all the font families\n@mixin oFontsIncludeAll {\n\t@each $family, $properties in $o-fonts-families {\n\t\t@each $variant in map-get($properties, variants) {\n\t\t\t@include oFontsInclude($family, map-get($variant, weight), map-get($variant, style));\n\t\t}\n\t}\n}\n","$o-colors-is-silent: true;\n@import 'o-colors/main';\n\n$o-fonts-is-silent: true;\n@import 'o-fonts/main';\n\n@include oFontsInclude(MetricWeb, semibold);\n\nbody {\n  background-color: oColorsGetPaletteColor(\"pink\");\n  margin: 0;\n  padding: 0;\n}\n\n.header-logo {\n  height: 66px;\n  background-position: center;\n  background-repeat: no-repeat;\n}\n\n.header-brand {\n  background-color: oColorsGetPaletteColor(\"org-b2c\");\n  font-family: oFontsGetFontFamilyWithFallbacks(MetricWeb);\n  color: oColorsGetPaletteColor(\"white\");\n  font-size: 18px;\n  line-height: 42px;\n  padding-left: 18px;\n}\n\n$loading-spinner-framerate: .7s;\n.loading-spinner  {\n  width: 100px;\n  height: 100px;\n  display: block;\n  margin:40px auto 0 auto;\n\n  -webkit-animation: play $loading-spinner-framerate steps(8) infinite;\n  -moz-animation: play $loading-spinner-framerate steps(8) infinite;\n  -ms-animation: play $loading-spinner-framerate steps(8) infinite;\n  -o-animation: play $loading-spinner-framerate steps(8) infinite;\n  animation: play $loading-spinner-framerate steps(8) infinite;\n}\n\n@-webkit-keyframes play {\n  from { background-position:    0px; }\n  to { background-position: -800px; }\n}\n\n@-moz-keyframes play {\n  from { background-position:    0px; }\n  to { background-position: -800px; }\n}\n\n@-ms-keyframes play {\n  from { background-position:    0px; }\n  to { background-position: -800px; }\n}\n\n@-o-keyframes play {\n  from { background-position:    0px; }\n  to { background-position: -800px; }\n}\n\n@keyframes play {\n  from { background-position:    0px; }\n  to { background-position: -800px; }\n}\n\n\n.chat {\n  overflow-y:auto;\n  height: 300px;\n  border-bottom: solid 1px #979797;\n}\n.chat__message {\n  position: relative;\n  font-family: Georgia;\n  font-size: 18px;\n  text-align: justify;\n  border-radius: 4px;\n  width: 98%;\n  margin: 10px auto;\n  min-height: 36px;\n}\n\n.chat__message--operator {\n  background-color: #fff;\n  &:after {\n    border-color: transparent #fff;\n  }\n}\n\n.chat__message--client {\n  background-color: oColorsGetPaletteColor(\"pink-tint2\");\n  &:after {\n    border-color: transparent oColorsGetPaletteColor(\"pink-tint2\");\n  }\n}\n\n.chat__message:after {\n  content: '';\n  position: absolute;\n  border-style: solid;\n  border-width: 6px 15px 6px 0;\n  display: block;\n  width: 0;\n  z-index: 1;\n  left: -15px;\n  top: 5px;\n  clear: both;\n}\n\n.chat__message__item {\n  display: inline-block;\n  margin: 10px;\n}\n\n.chat__message__item:after {\n  content: \".\";\n  clear: both;\n  display: block;\n  visibility: hidden;\n  line-height: 0;\n  height: 0;\n}\n\n.o-forms-group {\n  margin-bottom: 0;\n}\n\n.chat-input {\n  margin-top: 10px;\n  textarea {\n    border: 0;\n  }\n}\n\n.chat-controls {\n  margin-top: 10px;\n  button {\n    border-color: oColorsGetPaletteColor(\"org-b2c\");\n  }\n}\n\n.chat-controls--send {\n  background-color: oColorsGetPaletteColor(\"org-b2c\");\n  color: oColorsGetPaletteColor(\"white\");\n}\n\n.chat-controls--save {\n  background-color: oColorsGetPaletteColor(\"pink\");\n  color: oColorsGetPaletteColor(\"org-b2c\");\n}\n","////\n/// @group o-fonts\n/// @link http://registry.origami.ft.com/components/o-fonts\n////\n\n/// Path to the assets\n///\n/// @type String\n$o-fonts-path: '//origami-build.ft.com/v2/files/o-fonts-assets@1.3.0/' !default;\n\n/// Silent mode\n///\n/// @type Bool\n$o-fonts-is-silent: true !default;\n\n/// Font families\n///\n/// @type Map\n$o-fonts-families: (\n\tBentonSans: (\n\t\tfont-family: 'BentonSans, sans-serif',\n\t\tvariants: (\n\t\t\t(weight: light, style: normal),\n\t\t\t(weight: regular, style: normal),\n\t\t\t(weight: bold, style: normal)\n\t\t)\n\t),\n\tMillerDisplay: (\n\t\tfont-family: 'MillerDisplay, Georgia, serif',\n\t\tvariants: (\n\t\t\t(weight: regular, style: normal),\n\t\t\t(weight: bold, style: normal),\n\t\t\t(weight: \"black\", style: normal)\n\t\t)\n\t),\n\tMetricWeb: (\n\t\tfont-family: 'MetricWeb, sans-serif',\n\t\tvariants: (\n\t\t\t(weight: thin, style: normal),\n\t\t\t(weight: light, style: normal),\n\t\t\t(weight: light, style: italic),\n\t\t\t(weight: regular, style: normal),\n\t\t\t(weight: regular, style: italic),\n\t\t\t(weight: medium, style: normal),\n\t\t\t(weight: semibold, style: normal),\n\t\t\t(weight: bold, style: normal),\n\t\t\t(weight: bold, style: italic),\n\t\t)\n\t),\n\tFinancierDisplayWeb: (\n\t\tfont-family: 'FinancierDisplayWeb, serif',\n\t\tvariants: (\n\t\t\t(weight: light, style: italic),\n\t\t\t(weight: regular, style: normal),\n\t\t\t(weight: medium, style: italic),\n\t\t\t(weight: semibold, style: italic),\n\t\t\t(weight: bold, style: normal)\n\t\t)\n\t),\n\tFinancierTextWeb: (\n\t\tfont-family: 'FinancierTextWeb, serif',\n\t\tvariants: (\n\t\t\t(weight: regular, style: normal),\n\t\t\t(weight: regular, style: italic)\n\t\t)\n\t)\n) !default;\n\n/// Human-readable Font-weights\n///\n/// @access private\n///\n/// @type Map\n$_o-fonts-weights: (\n\t'thin':       100,\n\t'light':      200,\n\t'regular':    400,\n\t'normal':     400,\n\t'medium':     500,\n\t'semibold':   600,\n\t'bold':       700,\n\t'black':      800,\n) !default;\n\n/// Map of families and styles which have already been included\n/// Used to avoid declarations from being multiple times in the CSS output\n///\n/// @access private\n$_o-fonts-families-included: () !default;\n","////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n$o-colors-palette: () !default;\n\n/// Colour palette\n///\n/// These are the colours that make up the FT palette.\n/// We don't use these colours directly, but instead assign them to 'use cases',\n/// which are defined in use-cases.scss.\n///\n/// In the list below, each line contains a colour name and a colour code,\n/// and is finished with a comma:\n///\n/// \t<colour name>:   <colour code>,\n///\n/// The colour name must be a single word comprising just letters,\n/// numbers, and dashes.\n///\n/// You can have as many spaces between the colour name and the colour code\n/// as you like (so you can line them up neatly), and you *MUST* finish the\n/// line with a comma.\n///\n/// @link http://next.ft.com/__styleguide/design-primitives#palette\n///\n/// @type map\n$o-colors-palette: map-merge((\n\t// Non-colour CSS values\n\t'transparent':           transparent,\n\t'inherit':               inherit,\n\n\t// Primary Palette\n\t'pink':                  #fff1e0,\n\t'black':                 #000000,\n\t'white':                 #ffffff,\n\t'blue':                  #2e6e9e,\n\t'dark-blue':             #275e86,\n\t'claret':                #9e2f50,\n\t'orange':                #d66d06,\n\n\t'grey-tint1':            #b0b0b0,\n\t'grey-tint2':            #999999,\n\t'grey-tint3':            #777777,\n\t'grey-tint4':            #505050,\n\t'grey-tint5':            #333333,\n\n\t'pink-tint1':            #f6e9d8,\n\t'pink-tint2':            #e9decf,\n\t'pink-tint3':            #cec6b9,\n\t'pink-tint4':            #a7a59b,\n\t'pink-tint5':            #74736c,\n\n\t// Colours\n\t'red':                   #cc0000,\n\t'green':                 #458b00,\n\n\t// Highlight tints\n\t'orange-tint1':          #eda45e,\n\t'brown-tint1':           #94826b,\n\t'yellow-tint1':          #eed485,\n\t'green-tint1':           #a6a471,\n\t'bluegreen-tint1':       #819e9a,\n\t'silver-tint1':          #c1b8b4,\n\n\t'purple-tint1':          #936971,\n\t'purple-tint2':          #737e7e,\n\n\t'red-tint1':             #b1493f,\n\t'red-tint2':             #c36256,\n\t'red-tint3':             #d17c70,\n\t'red-tint4':             #df9c92,\n\t'red-tint5':             #ebbcb3,\n\n\t'blue-tint1':            #598caf,\n\t'blue-tint2':            #75a5c2,\n\t'blue-tint3':            #8ab5cd,\n\t'blue-tint4':            #a9cadc,\n\t'blue-tint5':            #bcd7e5,\n\n\t// Sections colours\n\t'section-purple':        #92288f,\n\t'section-light-purple':  #ebcaec,\n\t'section-blue':          #0e6dcc,\n\t'section-light-blue':    #c5d4e8,\n\t'section-green':         #09a25c,\n\t'section-light-green':   #a1dbb2,\n\t'section-red':           #cc0033,\n\n\t// Next\n\t// http://next.ft.com/__styleguide/design-primitives#palette\n\t'warm-1':                #ffe9d7,\n\t'warm-2':                #f6e9d8,\n\t'warm-3':                #cec6b9,\n\t'warm-4':                #1d1d1d,\n\t'warm-5':                #fdf8f2,\n\t'warm-6':                #8b572a,\n\n\t'cold-1':                #505050,\n\t'cold-2':                #333333,\n\t'cold-3':                #1d1d1d,\n\n\t'blue-1':                #002758,\n\t'blue-2':                #eeeeee,\n\n\t'purple-1':              #410057,\n\t'purple-2':              #f3dee3,\n\n\t'teal-1':                #27757b,\n\t'teal-2':                #2bbbbf,\n\n\t'claret-1':              #9e2f50,\n\t'claret-2':              #ff7f8a,\n\t'claret-inverse':        #4f1828,\n\n\t// FT organisation colours\n\t'org-b2c':               #4e96eb,\n\t'org-b2c-dark':          #3a70af,\n\t'org-b2c-light':         #99c6fb,\n\n\t'org-b2b':               #f6801a,\n\t'org-b2b-dark':          #c85f04,\n\t'org-b2b-light':         #f29d53,\n\n), $o-colors-palette);\n","////\n/// @group o-fonts\n/// @link http://registry.origami.ft.com/components/o-fonts\n////\n\n/// Check if a font variant exists for a family\n///\n/// @param {String} family - one of $o-fonts-families\n/// @param {String} weight\n/// @param {String} style\n///\n/// @access private\n///\n/// @return {Bool}\n@function _oFontsVariantExists($family, $weight, $style) {\n\t$font-properties: map-get($o-fonts-families, $family);\n\t$font-variants: map-get($font-properties, variants);\n\n\t@each $variant in $font-variants {\n\t\t// Check if this weight and style variant exists for this family\n\t\t// Known issue with LibSass 3.0.2 - https://github.com/sass/libsass/issues/741\n\t\t@if (map-get($variant, weight) == $weight and map-get($variant, style) == $style) {\n\t\t\t@return true;\n\t\t}\n\t}\n\t@return false;\n}\n\n/// Capitalise first letter of $string\n///\n/// @param {String} $string - string to update\n///\n/// @return {String}\n@function _oFontsStringCapitalise($string) {\n\t$string: $string + unquote(''); // Make sure $string has a type of String\n\t$first-letter: to-upper-case(str-slice($string, 0, 1));\n\t$rest-of-string: str-slice($string, 2);\n\n\t@return $first-letter + $rest-of-string;\n}\n\n/// Get a font-family stack with the appropriate fallbacks\n///\n/// @param {String} family\n///\n/// @return {String} - font-stack\n///\n/// @example scss\n/// font-family: oFontsGetFontFamilyWithFallbacks(FinancierDisplayWeb);\n@function oFontsGetFontFamilyWithFallbacks($family) {\n\t@if $family == 'Clarion' {\n\t\t@warn \"Clarion has been removed, use Georgia instead\";\n\t\t@return $o-fonts-serif;\n\t}\n\t@if map-has-key($o-fonts-families, $family) {\n\t\t$properties: map-get($o-fonts-families, $family);\n\t\t@return unquote(map-get($properties, font-family));\n\t}\n\t@warn 'Font #{$family} not found. Must be one of $o-fonts-families.';\n\t@return inherit;\n}\n\n/// Path to a font asset\n///\n/// @param {String} $asset\n///\n/// @return {String} - Path to the font asset, without the file extension\n@function oFontsUseAsset($asset) {\n\t@return $o-fonts-path + $asset;\n}\n\n/// Machine-readable CSS font-weight.\n///\n/// @param {String} $keyword - Human-readable keyword, one of $_o-fonts-weights\n///\n/// @example scss\n/// font-weight: oFontsWeight(lighter);\n///\n/// @return {Number} - CSS font-weight\n@function oFontsWeight($keyword) {\n\t@if map-has-key($_o-fonts-weights, $keyword) {\n\t\t@return map-get($_o-fonts-weights, $keyword);\n\t} @else {\n\t\t@warn 'Keyword \"#{$keyword}\" not found. Must be one of $_o-fonts-weights.';\n\t}\n}\n"],"sourceRoot":"/source/"}